{"version":3,"sources":["smirk1.mp3","smirk2.mp3","giggle.mp3","crowdlaugh.mp3","groans.mp3","hiccup.mp3","sneeze.mp3","snore.mp3","slurp.mp3","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Display","props","disp","react_default","a","createElement","id","className","style","width","height","minWidth","borderRadius","backgroundColor","onClick","handleClick","key","display","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","bind","assertThisInitialized","handleKeyPress","play","audio01","Audio","smirk1","audio02","smirk2","audio03","giggle","audio04","laughter","audio05","groan","audio06","hiccup","audio07","sneeze","audio08","snore","audio09","slurp","document","addEventListener","audioVar","setState","console","log","event","onKeyDown","marginLeft","marginRight","playAudio","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f4ce30e2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/smirk1.dcf36f8b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/smirk2.ee8dfb74.mp3\";","module.exports = __webpack_public_path__ + \"static/media/giggle.2442114b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/crowdlaugh.b954467b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/groans.8a8ca377.mp3\";","module.exports = __webpack_public_path__ + \"static/media/hiccup.3b6d35a9.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sneeze.c66cae01.mp3\";","module.exports = __webpack_public_path__ + \"static/media/snore.740fdf3a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/slurp.66e5effa.mp3\";","import React, {Component} from 'react';\n\nimport './App.css';\n\nimport smirk1 from './smirk1.mp3';\nimport smirk2 from './smirk2.mp3';\nimport giggle from './giggle.mp3';\n\nimport laughter from './crowdlaugh.mp3';\nimport groan from './groans.mp3';\nimport hiccup from './hiccup.mp3';\n\nimport sneeze from './sneeze.mp3';\nimport snore from './snore.mp3';\nimport slurp from './slurp.mp3';\n\n\nclass App extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        display: 'click or press a corresponding key',\n\n      }\n\n      this.handleClick= this.handleClick.bind(this);\n      this.handleKeyPress= this.handleKeyPress.bind(this);\n      this.play= this.play.bind(this);\n      \n      this.audio01 = new Audio(smirk1);\n      this.audio02 = new Audio(smirk2);\n      this.audio03 = new Audio(giggle);\n      this.audio04 = new Audio(laughter);\n      this.audio05 = new Audio(groan);\n      this.audio06 = new Audio(hiccup);\n      this.audio07 = new Audio(sneeze);\n      this.audio08 = new Audio(snore);\n      this.audio09 = new Audio(slurp);\n\n    }\n\n    componentWillMount(){\n      document.addEventListener('keypress', this.handleKeyPress)\n      }\n\n\n    play(audioVar) {\n      audioVar.play()\n    }\n\n\n\n    handleClick(display) {\n\n      const disp = ['smirk one [Q]', 'smirk two [W]', 'giggle [E]', 'crowd laughing [A]', 'groan [S]', 'hiccup [D]', 'sneeze [Z]', 'snore [X]', 'slurp [C]'];\n\n      this.setState(\n       {display: display}\n      )\n\n      switch(display) {\n        case disp[0]:\n          this.audio01.play();\n          break;\n        case disp[1]:\n          this.audio02.play();\n          break;   \n        case disp[2]:\n          this.audio03.play();\n          break;\n        case disp[3]:\n          this.audio04.play();\n          break;      \n        case disp[4]:\n          this.audio05.play();\n          break;\n        case disp[5]:\n          this.audio06.play();\n          break;   \n        case disp[6]:\n          this.audio07.play();\n          break;\n        case disp[7]:\n          this.audio08.play();\n          break;\n        case disp[8]:\n          this.audio09.play();\n          break;\n        default:\n          console.log('No value');    \n        \n      }\n\n   }\n\n\n   handleKeyPress (event) {\n\n    const disp = ['smirk one [Q]', 'smirk two [W]', 'giggle [E]', 'crowd laughing [A]', 'groan [S]', 'hiccup [D]', 'sneeze [Z]', 'snore [X]', 'slurp [C]'];\n\n    switch(event.key) {\n      case \"q\":\n        this.setState({display:  disp[0] })\n        this.play(this.audio01);\n        break;\n      case \"w\":\n        this.setState({display:  disp[1]})\n        this.play(this.audio02);\n        break;\n      case \"e\":\n        this.setState({display:  disp[2]})\n        this.play(this.audio03);\n        break;\n      case \"a\":\n        this.setState({display:   disp[3]})\n        this.play(this.audio04);\n        break;\n      case \"s\":\n        this.setState({display:  disp[4]})\n        this.play(this.audio05);\n        break;\n      case \"d\":\n        this.setState({display:  disp[5]})\n        this.play(this.audio06);\n        break;\n      case \"z\":\n        this.setState({display:  disp[6]})\n        this.play(this.audio07);\n        break;\n      case \"x\":\n        this.setState({display:  disp[7]})\n        this.play(this.audio08);\n        break;\n      case \"c\":\n        this.setState({display:  disp[8]})\n        this.play(this.audio09);\n        break; \n      default:\n        console.log('No value');\n    }\n\n  }\n\n\n    render() {\n      return (\n        <div className=\"App container-fluid\" onKeyDown={this.handleKeyPress}>\n          <div className=\"d-flex align-items-center\" style={{height: '100vh', marginLeft: '-15px', marginRight: '-15px', backgroundColor: '#FFE8DC' }}>\n            <Display display={this.state.display} handleClick={this.handleClick}  playAudio={this.play} />\n          </div>\n        </div>\n      )\n    }\n  }\n\n\n\n\n function Display (props) {\n\n    const disp = ['smirk one [Q]', 'smirk two [W]', 'giggle [E]', 'crowd laughing [A]', 'groan [S]', 'hiccup [D]', 'sneeze [Z]', 'snore [X]', 'slurp [C]'];\n\n    return (\n\n      <div id=\"drum-machine\" className=\"mx-auto text-center\" style={{width: '270px', height: '295px', minWidth: '270px', borderRadius: '5px', backgroundColor: '#FFE8DC'}}>\n        <button  onClick={() => props.handleClick(disp[0])} className=\"btn  m-1\" id={disp[0]} key='1'>Q</button>\n        <button onClick={() => props.handleClick(disp[1])} className=\"btn  m-1\" id={disp[1]} key='2'>W</button>\n        <button onClick={() => props.handleClick(disp[2])} className=\"btn  m-1\" id={disp[2]}  key='3'>E</button>\n        <div className=\"w-100\"></div>\n        <button onClick={() => props.handleClick(disp[3])} className=\"btn  m-1\" id={disp[3]}  key='4'>A</button>\n        <button onClick={() => props.handleClick(disp[4])} className=\"btn  m-1\" id={disp[4]}  key='5'>S</button>\n        <button onClick={() => props.handleClick(disp[5])} className=\"btn  m-1\" id={disp[5]}  key='6'>D</button>\n        <div className=\"w-100\"></div>\n        <button onClick={() => props.handleClick(disp[6])} className=\"btn  m-1\" id={disp[6]}  key='7'>Z</button>\n        <button onClick={() => props.handleClick(disp[7])} className=\"btn  m-1\" id={disp[7]}  key='8'>X</button>\n        <button onClick={() => props.handleClick(disp[8])} className=\"btn  m-1\" id={disp[8]}  key='9'>C</button>\n       \n        <div className=\"mx-auto\" style={{width: '256px', backgroundColor: '#FE9F6D'}}>\n         <p className=\"mx-auto text-center drum-pad\">{props.display}</p>\n        \n        </div>\n\n      </div>\n      \n    )\n\n } \n\n\n\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}